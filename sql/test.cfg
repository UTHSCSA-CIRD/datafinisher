# Temporarily using custom subsection method [unknown], so for now there is no [DEFAULT]
# section until we have some option we want to always be explicitly overriden,
# bypassing inheritance from the parent section 


# Do not modify this section. 
[unknown]
sub_slct_std = SELPATIENTDATE
sub_payload = xgr(concept_cd,modifier_cd,instance_num,valtype_cd,tval_char,nval_num,valueflag_cd,quantity_num,units_cd,location_cd,confidence_num) {ccode} 
sbwr= 
sub_frm_std = from df_obsfact where id = {cid} 
presuffix=
suffix=
sub_grp_std = group by pn,sd) {jcode} on {jcode}.pn = patient_num and {jcode}.sd = start_date 
# If concode = 1, that means the data element is broken out 
# into individual concept codes (e.g. labs)
concode = 0
rule = UNKNOWN_DATA_ELEMENT
grouping = 1 
subgrouping = 9 
in_use = 1
criterion =

# Modify the sections below to configure datafinisher for your site
# You may temporarily disable a rule by adding: "in_use = 0" to its configuration options. 

# It is recommended that you NOT modify this section as these rules should be applicable across most I2B2 sites.

[codemod]
sub_payload = dgr(concept_cd,modifier_cd) {ccode} 
rule = codemod
subgrouping = 1
criterion =  coalesce(tval_char,valueflag_cd,units_cd,confidence_num,quantity_num,location_cd,valtype_cd,nval_num,-1) = -1 and mod is not null 

[codemod_info]
sub_payload = igr (NULL,NULL,instance_num,valtype_cd,tval_char,NULL,valueflag_cd,quantity_num,units_cd,location_cd,confidence_num) {ccode}
subgrouping = 2

[code]
sub_payload = dgr(concept_cd,modifier_cd) {ccode}
rule = code
criterion = coalesce(mod,tval_char,valueflag_cd,units_cd,confidence_num,quantity_num,location_cd,valtype_cd,nval_num,-1) = -1 

# It is recommended that you modify this section to adjust datafinisher for your site. 

[diag]
sub_payload = dgr(concept_cd,modifier_cd) {ccode}
sbwr = and modifier_cd not in ('DiagObs:MEDICAL_HX','PROBLEM_STATUS_C:2','PROBLEM_STATUS_C:3')
rule = diag
criterion = ddomain like '%ICD9%DX_ID%' or ddomain like '%DX_ID%ICD9%' 

[diag_inactive]
sbwr =  and modifier_cd in ('DiagObs:MEDICAL_HX','PROBLEM_STATUS_C:2','PROBLEM_STATUS_C:3')
grouping = 2

[ethnicity]
sub_slct_std = SELPATIENT 
sub_payload = concept_cd {ccode}
sub_grp_std = GRPJPATIENT
rule = ethnicity
subgrouping = 1
criterion = ddomain like '%DEM|ETHNICITY%' 


[loinc]
sub_slct_std = SELDISTPATIENTDATE
sub_payload = avg(nval_num) {ccode}
sbwr = and concept_cd = {concept_cd}
presuffix = {concept_cd}
# we explicitly set a suffix here so that this sub-rule can still be the template 
# for loinc_unit and loinc_info
suffix = _num
concode = 1
rule = loinc
subgrouping = 1
criterion = ddomain like '%LOINC%COMPONENT_ID%' or ddomain like '%COMPONENT_ID%LOINC%' 

[loinc_unit]
sub_payload = group_concat(distinct lower(units_cd)) {ccode}
subgrouping = 2

[loinc_info]
sub_payload = igr(NULL,NULL,instance_num,valtype_cd,tval_char,NULL,valueflag_cd,quantity_num,NULL,location_cd,confidence_num) {ccode}
subgrouping = 3

[vitals]
sub_slct_std = SELDISTPATIENTDATE
sub_payload = avg(nval_num) {ccode}
# as with loinc, we explicitly set a suffix here so that this sub-rule can still 
# be the template for vitals_info
suffix = _num
rule = vitals
subgrouping = 1
criterion = ddomain like '%PAT_ENC%' and ddomain not like '%PAT_ENC:LMP%'

[vitals_info]
sub_payload = igr(NULL,NULL,instance_num,valtype_cd,tval_char,NULL,valueflag_cd,quantity_num,NULL,location_cd,confidence_num) {ccode}
subgrouping = 2

[medication]
sub_slct_std = SELPATIENTDATE
sub_payload = dgr(concept_cd,modifier_cd) {ccode}
rule = meds
criterion = ddomain like 'KUH|MEDICATION_ID:%' 
